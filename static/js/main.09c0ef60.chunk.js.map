{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"sNAIA,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,Q,IAIPC,E,2KACSC,GAAG,IAAD,OACb,OACA,cAACN,EAAD,CACAI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAK,EAAKF,MAAME,QAAQG,Q,+BAMjC,OACE,gCACE,sBAAKJ,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GA1BTC,IAAMC,WAiCpBC,E,kDACJ,WAAYX,GAAO,IAAD,8BAChB,cAAMA,IACDY,MAAO,CACVC,QAAQ,CAAC,CACPN,QAAQO,MAAM,GAAGC,KAAK,QAEvBC,WAAY,EACbC,SAAQ,GAPM,E,wDAUNZ,GACV,IAAMQ,EAAQP,KAAKM,MAAMC,QAAQK,MAAM,EAAGZ,KAAKM,MAAMI,WAAY,GAE3DT,EADQM,EAAQA,EAAQM,OAAS,GAChBZ,QAAQW,QAC5BE,EAAgBb,IAAYA,EAAQF,KAGvCE,EAAQF,GAAGC,KAAKM,MAAMK,QAAU,IAAK,IACrCX,KAAKe,SAAS,CACZR,QAAQA,EAAQS,OAAO,CACrB,CAEAf,QAASA,KAGTS,WAAWH,EAAQM,OACnBF,SAASX,KAAKM,MAAMK,a,6BAInBM,GACPjB,KAAKe,SAAS,CACZL,WAAWO,EACXN,QAASM,EAAO,IAAM,M,+BAId,IAeJC,EAfG,OAEDX,EAASP,KAAKM,MAAMC,QACpBY,EAASZ,EAAQP,KAAKM,MAAMI,YAC5BU,EAASN,EAAgBK,EAAQlB,SACjCoB,EAAQd,EAAQe,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EACb,eAAiBA,EACjB,mBACA,OACE,6BACE,wBAAQ3B,QAAS,kBAAK,EAAK6B,OAAOF,IAAlC,SAA0CC,KADnCD,MAYb,OALEL,EADCE,EACO,WAAaA,EAEd,iBAAmBpB,KAAKM,MAAMK,QAAU,IAAI,KAInD,sBAAKhB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACAG,QAASkB,EAAQlB,QACjBL,QAAS,SAACG,GAAD,OAAM,EAAK2B,YAAY3B,QAGlC,sBAAKJ,UAAU,YAAf,UACE,8BAAMuB,IACN,6BAAKG,c,GAtEIlB,IAAMC,WAoFzB,SAASU,EAAgBb,GAWvB,IAVA,IAAM0B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA5B,EAAI,EAAGA,EAAI4B,EAAMd,OAAQd,IAAK,CAAC,IAAD,cACnB4B,EAAM5B,GADa,GAC9B6B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GACpE,OAAO7B,EAAQ2B,GAGnB,OAAO,KAtBTG,IAASC,OACP,cAAC3B,EAAD,IACA4B,SAASC,eAAe,W","file":"static/js/main.09c0ef60.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return(\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n      </button>\n  )\n}\nclass Board extends React.Component { \n  renderSquare(i){\n    return (\n    <Square \n    value={this.props.squares[i]} \n    onClick={()=> this.props.onClick(i)}\n    />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props){\n    super(props);\n    this.state= {\n      history:[{\n        squares:Array(9).fill(null)\n       }],\n       stepNumber: 0,\n      xIsNext:true,\n    }\n  }\n  handleClick(i) {\n    const history=this.state.history.slice(0, this.state.stepNumber +1);\n    const current=history[history.length - 1];\n    const squares= current.squares.slice();\n    if(calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i]=this.state.xIsNext ? 'X': 'O';\n    this.setState({\n      history:history.concat([\n        {\n\n        squares: squares\n      }\n    ]), \n        stepNumber:history.length,\n        xIsNext:!this.state.xIsNext,\n});\n  }\n\n  jumpTo(step){\n  this.setState({\n    stepNumber:step,\n    xIsNext:(step % 2) ===0\n\n  })\n}\n  render() {\n\n    const history= this.state.history;\n    const current= history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move)=> {\n      const desc = move?\n      'Go to move #' + move :\n      'Go to game start';\n      return(\n        <li key={move}>\n          <button onClick={()=> this.jumpTo(move)}>{desc}</button>\n           </li>\n      );\n    });\n    let status;\n    if(winner) {\n      status= 'Winner: ' + winner;\n    } else {\n      status='Next player: ' + (this.state.xIsNext ? 'X':'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n          squares={current.squares}\n          onClick={(i)=> this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}"],"sourceRoot":""}